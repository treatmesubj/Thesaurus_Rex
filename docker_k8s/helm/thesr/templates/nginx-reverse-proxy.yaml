apiVersion: v1
kind: Service
metadata:
  labels:
    service: nginx-reverse-proxy
  name: nginx-reverse-proxy
spec:
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    service: nginx-reverse-proxy
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: nginx-reverse-proxy
  name: nginx-reverse-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      service: nginx-reverse-proxy
  strategy: {}
  template:
    metadata:
      labels:
        network/go-live: "true"
        service: nginx-reverse-proxy
    spec:
      containers:
        - image: nginx-reverse-proxy
          name: nginx-reverse-proxy
          imagePullPolicy: Never
          ports:
            - containerPort: 443
            - containerPort: 80
          resources: {}
          volumeMounts:
            - name: letsencrypt-vol
              mountPath: /letsencrypt/certs
            - name: letsencrypt-vol
              mountPath: /etc/letsencrypt
      hostname: nginx-reverse-proxy
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      restartPolicy: Always
      volumes:
        - name: letsencrypt-vol
          persistentVolumeClaim:
            claimName: letsencrypt-pvc
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - thinkpad
status: {}
